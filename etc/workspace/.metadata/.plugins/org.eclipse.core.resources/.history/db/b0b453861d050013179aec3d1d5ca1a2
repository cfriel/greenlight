package com.greenlight.integration;

import org.apache.xerces.xs.StringList;
import org.apache.xerces.xs.XSImplementation;
import org.apache.xerces.xs.XSLoader;
import org.apache.xerces.xs.XSModel;
import org.apache.xerces.xs.XSNamedMap;
import org.apache.xerces.xs.XSSimpleTypeDefinition;
import org.apache.xerces.xs.XSTypeDefinition;

import org.w3c.dom.bootstrap.DOMImplementationRegistry;

public class SchemaParser {

    public static void main(String[] args) {

        // Get DOM Implementation using DOM Registry
        System.setProperty(DOMImplementationRegistry.PROPERTY,
                           "org.apache.xerces.dom.DOMXSImplementationSourceImpl");

        DOMImplementationRegistry registry;
        try {
            registry = DOMImplementationRegistry.newInstance();
            XSImplementation impl = (XSImplementation)registry.getDOMImplementation("XS-Loader");

            XSLoader schemaLoader = impl.createXSLoader(null);

            XSModel model = schemaLoader
                .loadURI("file:///data/greenlight/src/packages/greenlight-feeds/camel-spring-2.11.1.xsd");

            XSNamedMap simpleDefinitions = model.getComponents(XSTypeDefinition.SIMPLE_TYPE);

            for (Object key : simpleDefinitions.keySet()) {

                XSSimpleTypeDefinition obj = (XSSimpleTypeDefinition)simpleDefinitions.get(key);

                StringList sl = obj.getLexicalEnumeration();
                System.out.println(sl);

            }

            XSNamedMap complexDefinitions = model.getComponents(XSTypeDefinition.COMPLEX_TYPE);

            for (Object key : complexDefinitions.keySet()) {
                Object obj = complexDefinitions.get(key);

            }

        } catch (ClassCastException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (InstantiationException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

    }

}
